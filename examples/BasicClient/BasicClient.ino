/*
 * BasicClient.ino
 * 
 * –ü—Ä–æ—Å—Ç–æ–π –ø—Ä–∏–º–µ—Ä –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è —á—Ç–µ–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–∞ —Å–æ –≤—Å–µ–º–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ Mirlib –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å —ç–ª–µ–∫—Ç—Ä–æ—Å—á–µ—Ç—á–∏–∫–∞–º–∏
 * 
 * –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ CC1101:
 * VCC -> 3.3V
 * GND -> GND
 * MOSI -> GPIO 23 (ESP32) / D7 (ESP8266)
 * MISO -> GPIO 19 (ESP32) / D6 (ESP8266)
 * SCK -> GPIO 18 (ESP32) / D5 (ESP8266)
 * CS -> GPIO 5 (ESP32/ESP8266)
 * GDO0 -> GPIO 2 (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
 * GDO2 -> GPIO 4 (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
 */

#include <Mirlib.h>

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const int CS_PIN = 5; // –ü–∏–Ω Chip Select –¥–ª—è CC1101
const int GDO0_PIN = 2; // –ü–∏–Ω GDO0 (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
const int GDO2_PIN = 4; // –ü–∏–Ω GDO2 (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
const uint16_t METER_ADDRESS = 0x1234; // –ê–¥—Ä–µ—Å —Å—á–µ—Ç—á–∏–∫–∞ –¥–ª—è –æ–ø—Ä–æ—Å–∞
const uint32_t METER_PASSWORD = 0x12345678; // –ü–∞—Ä–æ–ª—å —Å—á–µ—Ç—á–∏–∫–∞ (–µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è)

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ –≤ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–º —Ä–µ–∂–∏–º–µ
Mirlib protocol(Mirlib::CLIENT, 0xFFFF);

void setup() {
    Serial.begin(115200);
    delay(1000);

    Serial.println("=== Mirlib BasicClient Example ===");
    Serial.println("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ –∏ CC1101...");

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è CC1101
    if (!protocol.begin(CS_PIN, GDO0_PIN, GDO2_PIN)) {
        Serial.println("‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ CC1101!");
        Serial.println("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –º–æ–¥—É–ª—è:");
        Serial.println("- –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–æ–≤–æ–¥–æ–≤ SPI");
        Serial.println("- –ü–∏–Ω CS = " + String(CS_PIN));
        while (1) {
            delay(1000);
        }
    }

    Serial.println("‚úÖ CC1101 –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ");

    // –í–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç–ª–∞–¥–æ—á–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
    protocol.setDebugMode(true);
    protocol.setTimeout(5000);

    Serial.println("üîç –ù–∞—á–∏–Ω–∞–µ–º –æ–ø—Ä–æ—Å —Å—á–µ—Ç—á–∏–∫–∞ –ø–æ –∞–¥—Ä–µ—Å—É 0x" + String(METER_ADDRESS, HEX));
    Serial.println();
}

void loop() {
    Serial.println("==========================================");
    Serial.println("üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ü–∏–∫–ª –æ–ø—Ä–æ—Å–∞ —Å—á–µ—Ç—á–∏–∫–∞");
    Serial.println("==========================================");

    // 1. Ping - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤—è–∑–∏
    Serial.println("\nüì° 1. Ping - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤—è–∑–∏");
    Serial.println("----------------------------");

    PingCommand pingCmd;
    if (protocol.sendCommand(&pingCmd, METER_ADDRESS)) {
        Serial.println("‚úÖ Ping —É—Å–ø–µ—à–µ–Ω!");
        Serial.println("   üìã –í–µ—Ä—Å–∏—è –ø—Ä–æ—à–∏–≤–∫–∏: 0x" + String(pingCmd.getFirmwareVersion(), HEX));
        Serial.println("   üìç –ê–¥—Ä–µ—Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞: 0x" + String(pingCmd.getDeviceAddress(), HEX));
    } else {
        Serial.println("‚ùå –û—à–∏–±–∫–∞ Ping: " + String(protocol.getLastError()));
        delay(5000);
        return;
    }

    // 2. GetInfo - –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—á–µ—Ç—á–∏–∫–µ
    Serial.println("\nüìä 2. GetInfo - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—á–µ—Ç—á–∏–∫–µ");
    Serial.println("--------------------------------------");

    GetInfoCommand infoCmd;
    if (protocol.sendCommand(&infoCmd, METER_ADDRESS)) {
        Serial.println("‚úÖ GetInfo —É—Å–ø–µ—à–µ–Ω!");
        Serial.println("   üîß ID –ø–ª–∞—Ç—ã: 0x" + String(infoCmd.getBoardId(), HEX));
        Serial.println("   üíæ –í–µ—Ä—Å–∏—è –ø—Ä–æ—à–∏–≤–∫–∏: 0x" + String(infoCmd.getFirmwareVersion(), HEX));

        GenerationInfo genInfo = infoCmd.getGenerationInfo();
        Serial.print("   üè≠ –ü–æ–∫–æ–ª–µ–Ω–∏–µ: ");
        if (genInfo.isOldGeneration) {
            Serial.println("–°—Ç–∞—Ä–æ–µ");
        } else if (genInfo.isTransitionGeneration) {
            Serial.println("–ü–µ—Ä–µ—Ö–æ–¥–Ω–æ–µ");
        } else if (genInfo.isNewGeneration) {
            Serial.println("–ù–æ–≤–æ–µ");
        } else {
            Serial.println("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ");
        }

        Serial.println("   ‚ö° –ü–æ–¥–¥–µ—Ä–∂–∫–∞ 100–ê: " + String(infoCmd.supports100A() ? "–î–∞" : "–ù–µ—Ç"));

        if (infoCmd.isNewGeneration()) {
            Serial.println("   üí° –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ–º: " + String(infoCmd.hasStreetLightingControl() ? "–î–∞" : "–ù–µ—Ç"));
        }

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ–∫–æ–ª–µ–Ω–∏—è –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–∏—Ö –∫–æ–º–∞–Ω–¥
        if (protocol.autoDetectGeneration(METER_ADDRESS)) {
            Serial.println("   üéØ –ü–æ–∫–æ–ª–µ–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ –¥–ª—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∞");
        }
    } else {
        Serial.println("‚ùå –û—à–∏–±–∫–∞ GetInfo: " + String(protocol.getLastError()));
    }

    // 3. ReadDateTime - —á—Ç–µ–Ω–∏–µ –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏
    Serial.println("\nüïê 3. ReadDateTime - –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è");
    Serial.println("----------------------------------");

    ReadDateTimeCommand dateTimeCmd;
    if (protocol.sendCommand(&dateTimeCmd, METER_ADDRESS)) {
        Serial.println("‚úÖ ReadDateTime —É—Å–ø–µ—à–µ–Ω!");

        char timeStr[20];
        dateTimeCmd.formatDateTime(timeStr);
        Serial.println("   üìÖ –í—Ä–µ–º—è —Å—á–µ—Ç—á–∏–∫–∞: " + String(timeStr));
        Serial.println("   üìÜ –î–µ–Ω—å –Ω–µ–¥–µ–ª–∏: " + String(dateTimeCmd.getDayOfWeekName()));

        if (dateTimeCmd.isDateTimeValid()) {
            Serial.println("   ‚úÖ –í—Ä–µ–º—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ");
        } else {
            Serial.println("   ‚ö†Ô∏è  –í—Ä–µ–º—è –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ");
        }
    } else {
        Serial.println("‚ùå –û—à–∏–±–∫–∞ ReadDateTime: " + String(protocol.getLastError()));
    }

    // 4. ReadStatus - —á—Ç–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–∞
    Serial.println("\nüìà 4. ReadStatus - —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞");
    Serial.println("-------------------------------------");

    // –ü–æ–≤—Ç–æ—Ä–Ω–æ –ø–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ–∫–æ–ª–µ–Ω–∏—è
    GetInfoCommand infoForStatus;
    if (protocol.sendCommand(&infoForStatus, METER_ADDRESS)) {
        ReadStatusCommand statusCmd;
        statusCmd.setGeneration(infoForStatus.getBoardId(), 0x32);
        statusCmd.setRequest(ACTIVE_FORWARD); // –ê–∫—Ç–∏–≤–Ω–∞—è —ç–Ω–µ—Ä–≥–∏—è –ø—Ä—è–º–æ–≥–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è

        if (protocol.sendCommand(&statusCmd, METER_ADDRESS)) {
            Serial.println("‚úÖ ReadStatus —É—Å–ø–µ—à–µ–Ω!");

            if (statusCmd.isOldGeneration()) {
                auto response = statusCmd.getOldResponse();
                Serial.println("   üìä –û–±—â–∞—è —ç–Ω–µ—Ä–≥–∏—è: " + String(response.totalEnergy));
                Serial.println("   üéØ –ê–∫—Ç–∏–≤–Ω—ã–π —Ç–∞—Ä–∏—Ñ: " + String(response.configByte.activeTariff));
                Serial.println("   üìç –ó–Ω–∞–∫–æ–≤ –Ω–∞ –¥–∏—Å–ø–ª–µ–µ: " + String(response.configByte.displayDigits + 6));
                Serial.println("   üî¢ –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –¥–µ–ª–µ–Ω–∏—è: " + String(response.divisionCoeff));

                Serial.println("   üí∞ –¢–∞—Ä–∏—Ñ—ã:");
                for (int i = 0; i < 4; i++) {
                    Serial.println("      –¢–∞—Ä–∏—Ñ " + String(i + 1) + ": " + String(response.tariffValues[i]));
                }
            } else {
                auto response = statusCmd.getNewResponse();
                Serial.println("   üìä –û–±—â–∞—è –∞–∫—Ç–∏–≤–Ω–∞—è —ç–Ω–µ—Ä–≥–∏—è: " + String(response.totalActive));
                Serial.println("   üìà –û–±—â–∞—è –ø–æ–ª–Ω–∞—è —ç–Ω–µ—Ä–≥–∏—è: " + String(response.totalFull));
                Serial.println("   üéØ –ê–∫—Ç–∏–≤–Ω—ã–π —Ç–∞—Ä–∏—Ñ: " + String(response.configByte.activeTariff));
                Serial.println("   ‚ö° –ö–æ—ç—Ñ—Ñ. —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Ç–æ–∫–∞: " + String(response.currentTransformCoeff));
                Serial.println("   üîå –ö–æ—ç—Ñ—Ñ. —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è: " + String(response.voltageTransformCoeff));

                Serial.println("   üí∞ –¢–∞—Ä–∏—Ñ—ã:");
                for (int i = 0; i < 4; i++) {
                    Serial.println("      –¢–∞—Ä–∏—Ñ " + String(i + 1) + ": " + String(response.tariffValues[i]));
                }
            }
        } else {
            Serial.println("‚ùå –û—à–∏–±–∫–∞ ReadStatus: " + String(protocol.getLastError()));
        }
    }

    // 5. ReadInstantValue - –º–≥–Ω–æ–≤–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è (—Ç–æ–ª—å–∫–æ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–Ω–æ–≥–æ/–Ω–æ–≤–æ–≥–æ –ø–æ–∫–æ–ª–µ–Ω–∏—è)
    Serial.println("\n‚ö° 5. ReadInstantValue - –º–≥–Ω–æ–≤–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è");
    Serial.println("--------------------------------------------");

    GetInfoCommand infoForInstant;
    if (protocol.sendCommand(&infoForInstant, METER_ADDRESS)) {
        GenerationInfo genInfo = infoForInstant.getGenerationInfo();

        if (genInfo.isOldGeneration) {
            Serial.println("‚ö†Ô∏è  ReadInstantValue –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —Å—Ç–∞—Ä—ã–º –ø–æ–∫–æ–ª–µ–Ω–∏–µ–º");
        } else {
            ReadInstantValueCommand instantCmd;
            instantCmd.setGeneration(infoForInstant.getBoardId(), 0x32);
            instantCmd.setRequest(GROUP_BASIC); // –û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã

            if (protocol.sendCommand(&instantCmd, METER_ADDRESS)) {
                Serial.println("‚úÖ ReadInstantValue —É—Å–ø–µ—à–µ–Ω!");

                if (instantCmd.isTransitionGeneration()) {
                    auto response = instantCmd.getTransitionResponse();
                    Serial.println("   üîå –ù–∞–ø—Ä—è–∂–µ–Ω–∏—è:");
                    Serial.println("      –§–∞–∑–∞ A: " + String(response.getVoltageA(), 2) + " –í");
                    Serial.println("      –§–∞–∑–∞ B: " + String(response.getVoltageB(), 2) + " –í");
                    Serial.println("      –§–∞–∑–∞ C: " + String(response.getVoltageC(), 2) + " –í");

                    Serial.println("   ‚ö° –¢–æ–∫–∏:");
                    Serial.println("      –§–∞–∑–∞ A: " + String(response.getCurrentA(), 3) + " –ê");
                    Serial.println("      –§–∞–∑–∞ B: " + String(response.getCurrentB(), 3) + " –ê");
                    Serial.println("      –§–∞–∑–∞ C: " + String(response.getCurrentC(), 3) + " –ê");

                    Serial.println("   üìä –î—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:");
                    Serial.println("      –ß–∞—Å—Ç–æ—Ç–∞: " + String(response.getFrequencyHz(), 2) + " –ì—Ü");
                    Serial.println("      cos œÜ: " + String(response.getCosPhiValue(), 3));
                    Serial.println("      –ü–æ–¥–¥–µ—Ä–∂–∫–∞ 100–ê: " + String(response.is100ASupport ? "–î–∞" : "–ù–µ—Ç"));
                } else if (instantCmd.isNewGeneration()) {
                    auto response = instantCmd.getNewBasicResponse();
                    Serial.println("   üîå –ù–∞–ø—Ä—è–∂–µ–Ω–∏—è:");
                    Serial.println("      –§–∞–∑–∞ A: " + String(response.getVoltageA(), 2) + " –í");
                    Serial.println("      –§–∞–∑–∞ B: " + String(response.getVoltageB(), 2) + " –í");
                    Serial.println("      –§–∞–∑–∞ C: " + String(response.getVoltageC(), 2) + " –í");

                    Serial.println("   ‚ö° –¢–æ–∫–∏:");
                    Serial.println("      –§–∞–∑–∞ A: " + String(response.getCurrentA(), 3) + " –ê");
                    Serial.println("      –§–∞–∑–∞ B: " + String(response.getCurrentB(), 3) + " –ê");
                    Serial.println("      –§–∞–∑–∞ C: " + String(response.getCurrentC(), 3) + " –ê");

                    Serial.println("   üîã –ú–æ—â–Ω–æ—Å—Ç–∏:");
                    Serial.println("      –ê–∫—Ç–∏–≤–Ω–∞—è: " + String(response.getActivePowerKW(), 3) + " –∫–í—Ç");
                    Serial.println("      –†–µ–∞–∫—Ç–∏–≤–Ω–∞—è: " + String(response.getReactivePowerKvar(), 3) + " –∫–≤–∞—Ä");

                    Serial.println("   üìä –î—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:");
                    Serial.println("      –ß–∞—Å—Ç–æ—Ç–∞: " + String(response.getFrequencyHz(), 2) + " –ì—Ü");
                    Serial.println("      cos œÜ: " + String(response.getCosPhiValue(), 3));
                }
            } else {
                Serial.println("‚ùå –û—à–∏–±–∫–∞ ReadInstantValue: " + String(protocol.getLastError()));
            }
        }
    }

    // –ó–∞–∫–ª—é—á–µ–Ω–∏–µ —Ü–∏–∫–ª–∞
    Serial.println("\nüèÅ –¶–∏–∫–ª –æ–ø—Ä–æ—Å–∞ –∑–∞–≤–µ—Ä—à–µ–Ω");
    Serial.println("–û–∂–∏–¥–∞–Ω–∏–µ 10 —Å–µ–∫—É–Ω–¥ –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ü–∏–∫–ª–∞...");
    Serial.println("==========================================\n");

    delay(10000); // –ü–∞—É–∑–∞ 10 —Å–µ–∫—É–Ω–¥
}
